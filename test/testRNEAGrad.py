from URDFParser import URDFParser
from RBDReference import RBDReference
from GRiDCodeGenerator import GRiDCodeGenerator
from util import parseInputs, printUsage, validateRobot, initializeValues, printErr
import numpy as np

"""
This script runs the RNEA gradient algorithm from RBDReference.
"""

def test_rnea_grad():
    URDF_PATH, DEBUG_MODE, FLOATING_BASE = parseInputs()

    parser = URDFParser()
    robot = parser.parse(URDF_PATH, floating_base = FLOATING_BASE, using_quaternion = True)

    validateRobot(robot)

    reference = RBDReference(robot)
    q, qd, qdd, _ = initializeValues(robot, MATCH_CPP_RANDOM = False)

    qdd = np.zeros(len(qdd))

    # atlas:
    # q = np.array([0.45541040596614046, 0.17739109403631648, 0.5243228360265304, 0.19754945447492378, -0.3615257320911643, 0.32454186556231474, -0.8514375699779404, 0.7299565354436298, 0.12104421509504881, 0.7294280977920208, 0.9535514830117537, 0.8677946587228325, 0.7873297274000702, 0.43830971038701694, 0.027840550891715554, 0.29468544478515046, 0.7865080170964168, 0.4079998345687291, 0.9450018802925947, 0.5963296485091881, 0.2603116554705215, 0.9773485601207578, 0.5583174465425285, 0.5910728012202451, 0.9606554018784272, 0.04008324816654407, 0.2799685229639085, 0.6058573376357552, 0.22321093163846573, 0.3572342148264298, 0.412412261715029, 0.0005016964400935686, 0.33557685460487474, 0.6986881922440291, 0.007766813299602715, 0.5128441540455774, 0.7724539107294622])
    # qd = np.array([0.7296206000598418, 0.6815240307226966, 0.132558332368505, 0.1853447149873514, 0.8122975374307513, 0.2785946098102363, 0.6561689801739709, 0.25646609425405875, 0.44490356917467666, 0.09052265058603437, 0.7768806820889993, 0.9339280306435543, 0.8458281823185215, 0.6258384776898223, 0.1458061127229452, 0.5930974828889346, 0.45099029721299333, 0.39689243959479126, 0.545367127632111, 0.1304566498940115, 0.33272966005710236, 0.9305102640030073, 0.6077747285740969, 0.6091946367806558, 0.0158246897554023, 0.4212506405651939, 0.5261336010005935, 0.7061519904847785, 0.34610242052656914, 0.4201831968455879, 0.7925013529889131, 0.7288336054662375, 0.6653337711479476, 0.6955829511772428, 0.5635015370803815, 0.24077886059972564])


    for i in range(len(qdd)):
        qdd[i] = 0

    print("T q[NUM_DOF+FLOATING_BASE] = {" + ", ".join(str(x) for x in q) + "};")
    print("T qd[NUM_DOF] = {" + ", ".join(str(x) for x in qd) + "};")
    print("T qdd[NUM_DOF] = {" + ", ".join(str(x) for x in qdd) + "};")

    dc_dq, dc_dqd = reference.rnea_grad(q, qd, qdd)

    print(f'\ndc_dq:\n{dc_dq}\n\ndc_dqd:\n{dc_dqd}\n')

if __name__ == "__main__":
    test_rnea_grad()